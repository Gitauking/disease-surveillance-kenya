version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: ds_postgres
    restart: unless-stopped
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10
  grafana:
    image: grafana/grafana:11.1.0
    container_name: ds_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - postgres

  modeler:
    build:
      context: ./modeler
    container_name: ds_modeler
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    command: ["python", "model_train.py"]


  adminer:
    image: adminer:4
    container_name: ds_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  ingestor:
    build:
      context: ./ingestor
    container_name: ds_ingestor
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    volumes:
      - ./data:/app/data
    command: ["python", "ingestion.py"]

volumes:
  pgdata:
